DROP TABLE IF EXISTS category, compilations, compilations_events, participation_requests, locations, users, events;

CREATE TABLE IF NOT EXISTS category
(
id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
name VARCHAR(50) NOT NULL UNIQUE
);

CREATE TABLE IF NOT EXISTS compilations
(
id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
pinned Boolean NOT NULL,
title VARCHAR(50) NOT NULL
);

CREATE TABLE IF NOT EXISTS locations
(
id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
lat REAL NOT NULL,
lon REAL NOT NULL
);

CREATE TABLE IF NOT EXISTS users
(
id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
name VARCHAR(250) NOT NULL,
email VARCHAR(254) NOT NULL UNIQUE
);

CREATE TABLE IF NOT EXISTS events
(
id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
annotation varchar(2000) NOT NULL,
category_id BIGINT NOT NULL REFERENCES category(id),
created_on timestamp,
description varchar(7000) NOT NULL,
event_date timestamp NOT NULL,
initiator_id BIGINT NOT NULL REFERENCES users(id) ON DELETE CASCADE,
location_id BIGINT NOT NULL REFERENCES locations(id) ON DELETE CASCADE,
paid Boolean NOT NULL,
participant_limit BIGINT NOT NULL,
published_on timestamp,
request_moderation Boolean NOT NULL,
state varchar(50) NOT NULL,
title varchar NOT NULL
);

CREATE TABLE IF NOT EXISTS participation_requests
(
id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
event_id BIGINT NOT NULL REFERENCES events(id) ON DELETE CASCADE,
requester BIGINT NOT NULL REFERENCES users(id) ON DELETE CASCADE,
created timestamp NOT NULL,
status VARCHAR(50) NOT NULL
);

CREATE TABLE IF NOT EXISTS compilations_events(
compilation_id BIGINT NOT NULL REFERENCES compilations(id) ON DELETE CASCADE,
event_id BIGINT NOT NULL REFERENCES events(id) ON DELETE CASCADE
);
ALTER TABLE compilations_events ADD CONSTRAINT unique_comp UNIQUE (compilation_id, event_id);
